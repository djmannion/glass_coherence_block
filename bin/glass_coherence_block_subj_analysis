#! /usr/bin/env python

"""Runs an analysis step for a subject in the Glass pattern coherence block
design fMRI experiment"""

import argparse
import os

import glass_coherence_block.config, glass_coherence_block.analysis.analysis

desc = """Runs an analysis step for a subject in the Glass coherence block
design fMRI experiment"""

eg = """
Example usage:
  run beta estimation on subject s1000:
    glass_coherence_block_subj_analysis s1000 beta

Steps:
  beta :

---N.B.---

* The script must be run from the glass_coherence_block/bin directory.

"""

target_dir = "glass_coherence_block/bin"

current_dir = os.getcwd()

if current_dir[ -len( target_dir ): ] != target_dir:
	raise IOError( "Script needs to be launched from %s" % target_dir )

# use this formatter so we can supply our own indentation
fmt = argparse.RawDescriptionHelpFormatter

parser = argparse.ArgumentParser( description = desc,
                                  epilog = eg,
                                  formatter_class = fmt,
                                )

parser.add_argument( "subj_id",
                     help = "Subject identifier"
                   )

analysis_steps = ( "beta",
                 )

parser.add_argument( "analysis_step",
                     choices = analysis_steps,
                     help = "Analysis step"
                   )

args = parser.parse_args()

# check the arguments are valid
if len( args.subj_id ) != 5 or args.subj_id[ 0 ] != "s":
	raise ValueError( "Subject ID needs to be in the format of sXXXX" )

# load the experiment / subject info
subj_conf = glass_coherence_block.config.get_subj_conf()[ args.subj_id ]
subj_paths = glass_coherence_block.config.get_subj_paths( args.subj_id )

conf = glass_coherence_block.config.get_conf()

if args.analysis_step == "beta":
	glass_coherence_block.analysis.analysis.get_glm_beta( subj_paths, conf )

else:
	print "Not completed"
