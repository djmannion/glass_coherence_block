#! /usr/bin/env python

"""Plots a figure for the Glass coherence block fMRI experiment"""

import os
import argparse

import glass_coherence_block.config, glass_coherence_block.analysis.paths
import glass_coherence_block.analysis.group_analysis
import glass_coherence_block.analysis.figures


def main():
	"""Execution function"""

	desc = """Plots a figure for the Glass coherence block
	          fMRI experiment"""

	eg = """
	"""


	# use this formatter so we can supply our own indentation
	fmt = argparse.RawDescriptionHelpFormatter

	parser = argparse.ArgumentParser( description = desc,
	                                  epilog = eg,
	                                  formatter_class = fmt,
	                                )

	steps = ( "psc",
	          "lin_kde",
	          "task"
	        )

	parser.add_argument( "step",
	                     choices = steps,
	                     help = "Analysis step"
	                   )

	parser.add_argument( "--show_plot",
	                     type = bool,
	                     help = "Display the plot, otherwise save",
	                     default = False
	                   )

	args = parser.parse_args()

	# load the experiment / subject info
	conf = glass_coherence_block.config.get_conf()
	paths = glass_coherence_block.analysis.paths.get_group_paths( conf )

	if args.step == "psc":
		glass_coherence_block.analysis.figures.plot_psc( conf, paths, args.show_plot  )

	elif args.step == "task":
		glass_coherence_block.analysis.figures.plot_task_perf( conf, paths, args.show_plot )

	elif args.step == "lin_kde":
		glass_coherence_block.analysis.figures.plot_lin_kde( conf, paths, args.show_plot )

	else:
		print "Not completed"


if __name__ == "__main__":
	main()
